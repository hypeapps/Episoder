ext {
    android = [
            compileSdkVersion: 26,
            buildToolsVersion: "26.0.1",
            minSdkVersion    : 17,
            targetSdkVersion : 25,
            versionCode      : 1,
            versionName      : "1.0"
    ]

    /* build plugins versions */
    build = [
            gradle: "3.0.0-beta2",
            kotlin: "1.1.4-3",
    ]

    buildPlugins = [
            gradle: "com.android.tools.build:gradle:$build.gradle",
            kotlin: "org.jetbrains.kotlin:kotlin-gradle-plugin:$build.kotlin",
    ]

    /* dependency version */
    def androidSupportLibs = '26.0.1'
    def constraintLayoutVersion = '1.0.2'
    def jUnitVersion = '4.12'
    def mockitoVersion = '2.8.47'
    def mockitoKotlinVersion = '1.5.0'
    def kluentVersion = '1.24'
    def espressoVersion = '2.2.2'
    def rxJavaVersion = '2.1.0'
    def rxAndroidVersion = '2.0.1'
    def okHttpVersion = '3.8.0'
    def leakCanaryVersion = '1.5.1'
    def blockCanaryVersion = '1.5.0'
    def gsonVersion = '2.8.1'
    def retrofitVersion = '2.3.0'
    def daggerVersion = '2.11'
    def javaxInjectVersion = '1'
    def stethoVersion = '1.5.0'
    def stethoOkHttpVersion = "1.5.0"
    def extensiblePageIndicatorVersion = '1.0.1'
    def butterKnifeVersion = '8.6.0'
    def glideVersion = '4.0.0'
    def rippleVersion = '1.3.1'
    def calligraphyVersion = '2.3.0'
    def multiSectionVersion = 'v0.1'
    def slidingRootNavVersion = '1.0.2'
    def rxCacheVersion = '1.8.0-2.x'
    def jolyglotGsonVersion = '0.0.3'
    def androidAnimationsVersion = '2.2@aar'
    def architectureComponentsVersion = '1.0.0-alpha5'
    def particlesDrawableVersion = '1.0.7'
    def lottieVersion = '2.0.0'
    def groupieVersion = '2.0.0-alpha2'
    def noiseViewVersion = '1.0'
    def smallBangVersion = '0.1.2'

    def libs = [
            /* support */
            supportAppCompat            : [group: 'com.android.support', name: 'appcompat-v7', version: androidSupportLibs],
            supportCardView             : [group: 'com.android.support', name: 'cardview-v7', version: androidSupportLibs],
            supportDesign               : [group: 'com.android.support', name: 'design', version: androidSupportLibs],
            supportPalette              : [group: 'com.android.support', name: 'palette-v7', version: androidSupportLibs],
            supportRecyclerView         : [group: 'com.android.support', name: 'recyclerview-v7', version: androidSupportLibs],
            supportV4                   : [group: 'com.android.support', name: 'support-v4', version: androidSupportLibs],
            constrainLayout             : [group: 'com.android.support.constraint', name: 'constraint-layout', version: constraintLayoutVersion],
            kotlin_stdlib               : [group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib', version: build.kotlin],
            archLifecycleRuntime        : [group: 'android.arch.lifecycle', name: 'runtime', version: architectureComponentsVersion],
            archLifecycleExtensions     : [group: 'android.arch.lifecycle', name: 'extensions', version: architectureComponentsVersion],
            archLifecycleCompiler       : [group: 'android.arch.lifecycle', name: 'compiler', version: architectureComponentsVersion],
            archPersistenceRoom         : [group: 'android.arch.persistence.room', name: 'runtime', version: architectureComponentsVersion],
            archPersistenceRoomCompiler : [group: 'android.arch.persistence.room', name: 'compiler', version: architectureComponentsVersion],
            archPersistenceRoomRxSupport: [group: 'android.arch.persistence.room', name: 'rxjava2', version: architectureComponentsVersion],
            /* rx */
            rxJava                      : [group: 'io.reactivex.rxjava2', name: 'rxjava', version: rxJavaVersion],
            rxAndroid                   : [group: 'io.reactivex.rxjava2', name: 'rxandroid', version: rxAndroidVersion],
            /* networking */
            okHttp                      : [group: 'com.squareup.okhttp3', name: 'okhttp', version: okHttpVersion],
            gson                        : [group: 'com.google.code.gson', name: 'gson', version: gsonVersion],
            retrofit                    : [group: 'com.squareup.retrofit2', name: 'retrofit', version: retrofitVersion],
            retrofitRxJavaAdapater      : [group: 'com.squareup.retrofit2', name: 'adapter-rxjava2', version: retrofitVersion],
            retrofitGsonConverter       : [group: 'com.squareup.retrofit2', name: 'converter-gson', version: retrofitVersion],
            /* dependency injection */
            dagger                      : [group: 'com.google.dagger', name: 'dagger', version: daggerVersion],
            daggerCompiler              : [group: 'com.google.dagger', name: 'dagger-compiler', version: daggerVersion],
            javaxInject                 : [group: 'javax.inject', name: 'javax.inject', version: javaxInjectVersion],
            butterKnife                 : [group: 'com.jakewharton', name: 'butterknife', version: butterKnifeVersion],
            butterKnifeCompiler         : [group: 'com.jakewharton', name: 'butterknife-compiler', version: butterKnifeVersion],
            /* debug tools */
            stetho                      : [group: 'com.facebook.stetho', name: 'stetho', version: stethoVersion],
            stethoOkHttp                : [group: 'com.facebook.stetho', name: 'stetho-okhttp3', version: stethoOkHttpVersion],
            blockCanary                 : [group: 'com.github.markzhai', name: 'blockcanary-android', version: blockCanaryVersion],
            leakCanary                  : [group: 'com.squareup.leakcanary', name: 'leakcanary-android', version: leakCanaryVersion],
            extensiblePageIndicator     : [group: 'com.merhold.extensiblepageindicator', name: 'extensiblepageindicator', version: extensiblePageIndicatorVersion],
            /* persistence */
            rxCache                     : [group: 'com.github.VictorAlbertos.RxCache', name: 'runtime', version: rxCacheVersion],
            jolyglotGson                : [group: 'com.github.VictorAlbertos.Jolyglot', name: 'gson', version: jolyglotGsonVersion],
            /* frontend */
            glide                       : [group: 'com.github.bumptech.glide', name: 'glide', version: glideVersion],
            glideCompiler               : [group: 'com.github.bumptech.glide', name: 'compiler', version: glideVersion],
            ripple                      : [group: 'com.patrickpissurno', name: 'ripple-effect', version: rippleVersion],
            calligraphy                 : [group: 'uk.co.chrisjenx', name: 'calligraphy', version: calligraphyVersion],
            multiSection                : [group: 'com.github.yalantis', name: 'multi-selection', version: multiSectionVersion],
            slidingRootNav              : [group: 'com.yarolegovich', name: 'sliding-root-nav', version: slidingRootNavVersion],
            particlesDrawable           : [group: 'com.github.doctoror.particlesdrawable', name: 'library', version: particlesDrawableVersion],
            lottie                      : [group: 'com.airbnb.android', name: 'lottie', version: lottieVersion],
            groupie                     : [group: 'com.xwray', name: 'groupie', version: groupieVersion],
            noiseView                   : [group: 'pl.hypeapp', name: 'noiseview', version: noiseViewVersion],
            smallBang                   : [group: 'hanks.xyz', name: 'smallbang-library', version: smallBangVersion],
            // For some reason gradle cannot resolve version of this dependency and must be hardcoded in that way.
            androidAnimations           : "com.daimajia.androidanimations:library:$androidAnimationsVersion"
    ]

    def testLibs = [
            junit        : [group: 'junit', name: 'junit', version: jUnitVersion],
            espressoCore : [group: 'com.android.support.test.espresso', name: 'espresso-core', version: espressoVersion],
            mockito      : [group: 'org.mockito', name: 'mockito-inline', version: mockitoVersion],
            mockitoKotlin: [group: 'com.nhaarman', name: 'mockito-kotlin-kt1.1', version: mockitoKotlinVersion],
            kluent       : [group: 'org.amshove.kluent', name: 'kluent', version: kluentVersion],
    ]

    def modules = [
            dataproviders: ':dataproviders',
            domain       : ':domain',
            presentation : ':presentation'
    ]

    def supportAnnotationsExclude = {
        exclude group: 'com.android.support', module: 'support-annotations'
    }

    applicationModuleDependencies = [
            // support libs
            [configuration: "implementation", dependency: libs.supportAppCompat],
            [configuration: "implementation", dependency: libs.supportCardView],
            [configuration: "implementation", dependency: libs.supportDesign],
            [configuration: "implementation", dependency: libs.supportPalette],
            [configuration: "implementation", dependency: libs.supportRecyclerView],
            [configuration: "implementation", dependency: libs.supportV4],
            [configuration: "implementation", dependency: libs.kotlin_stdlib],
            [configuration: "implementation", dependency: libs.archLifecycleRuntime],
            [configuration: "implementation", dependency: libs.archLifecycleExtensions],
            [configuration: "annotationProcessor", dependency: libs.archLifecycleCompiler],
            // frontend
            [configuration: "implementation", dependency: libs.constrainLayout],
            [configuration: "implementation", dependency: libs.glide],
            [configuration: "implementation", dependency: libs.ripple],
            [configuration: "implementation", dependency: libs.calligraphy],
            [configuration: "implementation", dependency: libs.multiSection],
            [configuration: "implementation", dependency: libs.slidingRootNav],
            [configuration: "implementation", dependency: libs.androidAnimations],
            [configuration: "kapt", dependency: libs.glideCompiler],
            [configuration: "implementation", dependency: libs.particlesDrawable],
            [configuration: "implementation", dependency: libs.lottie],
            [configuration: "implementation", dependency: libs.groupie],
            [configuration: "implementation", dependency: libs.noiseView],
            [configuration: "implementation", dependency: libs.smallBang],
            // dependency injection
            [configuration: "implementation", dependency: libs.butterKnife],
            [configuration: "kapt", dependency: libs.butterKnifeCompiler],
            [configuration: "implementation", dependency: libs.dagger],
            [configuration: "kapt", dependency: libs.daggerCompiler],
            // debug tools
            [configuration: "implementation", dependency: libs.stetho],
            [configuration: "implementation", dependency: libs.blockCanary],
            [configuration: "implementation", dependency: libs.leakCanary],
            // rx
            [configuration: "implementation", dependency: libs.rxJava],
            [configuration: "implementation", dependency: libs.rxAndroid],
            // test
            [configuration: "testImplementation", dependency: testLibs.junit],
            [configuration: "testImplementation", dependency: testLibs.mockito],
            [configuration: "testImplementation", dependency: testLibs.mockitoKotlin],
            [configuration: "testImplementation", dependency: testLibs.kluent],
            [configuration: "androidTestImplementation", dependency: testLibs.espressoCore,
             options      : supportAnnotationsExclude],
            // modules
            [configuration: "implementation", dependency: project(modules.presentation)],
            [configuration: "implementation", dependency: project(modules.dataproviders)],
    ]

    presentationModuleDependencies = [
            [configuration: "implementation", dependency: libs.kotlin_stdlib],
            // dependency injection
            [configuration: "implementation", dependency: libs.javaxInject],
            // rx
            [configuration: "implementation", dependency: libs.rxJava],
            // test
            [configuration: "testImplementation", dependency: testLibs.junit],
            [configuration: "testImplementation", dependency: testLibs.mockito],
            [configuration: "testImplementation", dependency: testLibs.mockitoKotlin],
            [configuration: "testImplementation", dependency: testLibs.kluent],
            // modules
            [configuration: "implementation", dependency: project(modules.domain)]
    ]

    domainModuleDependencies = [
            [configuration: "implementation", dependency: libs.kotlin_stdlib],
            //dependency injection
            [configuration: "implementation", dependency: libs.javaxInject],
            //rx
            [configuration: "implementation", dependency: libs.rxJava],
            // test
            [configuration: "testImplementation", dependency: testLibs.junit],
            [configuration: "testImplementation", dependency: testLibs.mockito],
            [configuration: "testImplementation", dependency: testLibs.mockitoKotlin],
            [configuration: "testImplementation", dependency: testLibs.kluent],
    ]

    dataprovidersModuleDependencies = [
            [configuration: "implementation", dependency: libs.kotlin_stdlib],
            // networking
            [configuration: "api", dependency: libs.okHttp],
            [configuration: "api", dependency: libs.retrofit],
            [configuration: "api", dependency: libs.retrofitGsonConverter],
            [configuration: "api", dependency: libs.retrofitRxJavaAdapater],
            [configuration: "api", dependency: libs.stethoOkHttp],
            // dependency injection
            [configuration: "implementation", dependency: libs.javaxInject],
            // rx
            [configuration: "implementation", dependency: libs.rxJava],
            // cache
            [configuration: "api", dependency: libs.rxCache],
            [configuration: "api", dependency: libs.jolyglotGson],
            // persistence
            [configuration: "api", dependency: libs.archPersistenceRoom],
            [configuration: "implementation", dependency: libs.archPersistenceRoomRxSupport],
            [configuration: "kapt", dependency: libs.archPersistenceRoomCompiler],
            // test
            [configuration: "testImplementation", dependency: testLibs.junit],
            [configuration: "testImplementation", dependency: testLibs.mockito],
            [configuration: "testImplementation", dependency: testLibs.mockitoKotlin],
            [configuration: "testImplementation", dependency: testLibs.kluent],
            [configuration: "androidTestImplementation", dependency: testLibs.espressoCore,
             options      : supportAnnotationsExclude],
            // modules
            [configuration: "api", dependency: project(modules.domain)]
    ]

    def plugins = [
            android_library    : 'com.android.library',
            android_application: 'com.android.application',
            kotlin_android     : 'kotlin-android',
            kotlin             : 'kotlin',
            kotlin_exten       : 'kotlin-android-extensions'
    ]

    applicationModulePlugins = [plugins.android_application, plugins.kotlin_android]
    presentationModulePlugins = [plugins.kotlin]
    domainModulePlugins = [plugins.kotlin]
    dataprovidersModulePlugins = [plugins.android_library, plugins.kotlin_android]
}
